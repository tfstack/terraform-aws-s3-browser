on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes (if any)
        run: |
          git add .
          git commit -m "chore: update auto-generated files" || echo "No changes to commit"
          git push

      - name: Tag and release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --tags

          latest_tag=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1 || true)

          if [[ "$latest_tag" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"

            if (( patch < 99 )); then
              patch=$((patch + 1))
            else
              patch=0
              if (( minor < 99 )); then
                minor=$((minor + 1))
              else
                minor=0
                major=$((major + 1))
              fi
            fi
          else
            major=1
            minor=0
            patch=0
          fi

          new_tag="v${major}.${minor}.${patch}"
          echo "New tag: $new_tag"

          if [ -n "$latest_tag" ]; then
            git log "$latest_tag"..HEAD --pretty=format:"- %s" > changelog.txt
          else
            git log --pretty=format:"- %s" > changelog.txt
          fi

          git tag "$new_tag"
          git push origin "$new_tag"

          git tag -f "v$major" "$new_tag"
          git push -f origin "v$major"

          gh release create "$new_tag" --title "$new_tag" --notes-file changelog.txt
